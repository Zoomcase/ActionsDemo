name: Build and Deploy

on:
  pull_request:
    types:
      - assigned
      - opened
      - synchronize
      - reopened
      - closed
      - labeled
    paths:
      - "Memos/**"
      - ".github/workflows/memos.yml"
    branches:
      - "develop"
      - "master"
  push:
    paths:
      - "Memos/**"
      - ".github/workflows/memos.yml"
    branches:
      - "feature/**"

env:
  DOTNET_VERSION: "3.1.x"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Memos

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: |
          dotnet restore
          dotnet build -c Release
          dotnet publish -c Release -o './Output'

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Memos
          path: "Memos/Output/**/*"
          if-no-files-found: error

  deploy:
    name: Deploy
    if: (github.event_name == 'pull_request' && github.event.action == 'closed') || (github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'deploy')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v2
        with:
          name: Memos
          path: Memos

      - name: Deploy Dev
        if: contains(github.base_ref, 'feature') || github.base_ref == 'develop'
        env:
          RESOURCE_GROUP_NAME: DevMemos
          APP_SERVICE_NAME: devmemos
        uses: azure/CLI@v1
        with:
          azcliversion: 2.11.0
          inlineScript: |
            az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
            az account set --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}
            cd Memos
            zip -r ../memos.zip ./*
            az webapp deployment source config-zip --name ${{ env.APP_SERVICE_NAME }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --src ../memos.zip
